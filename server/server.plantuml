@startuml

title __SERVER's Class Diagram__\n

  namespace server {
    class server.LaunchServer {
    }
  }
  

  namespace server {
    class server.ServerPropertyLoader {
    }
  }
  

  namespace server {
    namespace controller {
      class server.controller.Controller {
      }
    }
  }
  

  namespace server {
    namespace controller {
      class server.controller.Lobby {
      }
    }
  }
  

  namespace server {
    namespace controller {
      class server.controller.LoginController {
      }
    }
  }
  

  namespace server {
    namespace controller {
      class server.controller.Player {
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace socket {
        class server.controller.socket.ServerSocketHandler {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace socket {
        class server.controller.socket.ViewSocketProxy {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.EndTurnState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.FirstTurnState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.GrabStuffState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.InactiveState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.PcSelectionState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.ReloadState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.RespawnState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.RunAroundState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.SetupKillShotTrackState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.SetupMapState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.SetupWeaponState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.ShootPeopleState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.StartTurnState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        abstract class server.controller.states.State {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.TargetSelectionState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.UsePowerUpState {
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace states {
        class server.controller.states.UseTargetingScopeState {
        }
      }
    }
  }
  

  namespace server {
    namespace database {
      class server.database.CustomizedHashMap {
      }
    }
  }
  

  namespace server {
    namespace database {
      class server.database.DatabaseHandler {
      }
    }
  }
  

  namespace server {
    namespace database {
      enum FileEnum {
      }
    }
  }
  

  namespace server {
    namespace database {
      class server.database.GameInfo {
      }
    }
  }
  

  namespace server {
    namespace database {
      class server.database.PlayerInfo {
      }
    }
  }
  

  namespace server {
    namespace model {
      class AmmoSquareTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.AmmoTile {
      }
    }
  }
  

  namespace server {
    namespace model {
      class AmmoTileDeckTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class AmmoTileTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.Deck {
      }
    }
  }
  

  namespace server {
    namespace model {
      class DeckTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.Effect {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.Game {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.GameBoard {
      }
    }
  }
  

  namespace server {
    namespace model {
      class GameBoardTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.KillShot {
      }
    }
  }
  

  namespace server {
    namespace model {
      class KillShotTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.KillShotTrack {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.ModelEventHandler {
      }
    }
  }
  

  namespace server {
    namespace model {
      class MovementOnMapTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.Pc {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.PcBoard {
      }
    }
  }
  

  namespace server {
    namespace model {
      class PcBoardTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class PcTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class PersistenceTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.PowerUpCard {
      }
    }
  }
  

  namespace server {
    namespace model {
      class PowerUpDeckTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class RandomTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class SerializerTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class SpawnPointTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class SquareTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class TargetCheckerTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      class server.model.WeaponCard {
      }
    }
  }
  

  namespace server {
    namespace model {
      class WeaponsDeckTest {
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace actions {
        abstract class server.model.actions.Action {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace actions {
        class server.model.actions.DamageMarksAction {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace actions {
        class server.model.actions.MovementAction {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.ActionDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.AmmoDeckDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.GameBoardDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.PowerUpsDeckDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.SquareDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace deserializers {
        class server.model.deserializers.WeaponsDeckDeserializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace serializers {
        class server.model.serializers.ActionSerializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace serializers {
        class server.model.serializers.DeckSerializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace serializers {
        class server.model.serializers.TargetCheckerSerializer {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace squares {
        class server.model.squares.AmmoSquare {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace squares {
        class server.model.squares.SpawnPoint {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace squares {
        abstract class server.model.squares.Square {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.BeyondWallsStraightLineDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.BlindnessDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.DifferentRoomDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.EmptyChecker {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.MaxDistanceDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.MaxDistanceFromVIsiblesDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.MinDistanceDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.SameRoomDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.SimpleStraightLineDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        interface server.model.target_checkers.TargetChecker {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        abstract class server.model.target_checkers.TargetCheckerDecorator {
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace target_checkers {
        class server.model.target_checkers.VisibilityDecorator {
        }
      }
    }
  }
  

  server.ServerPropertyLoader -up-|> common.PropertyLoader
  server.controller.Controller o-- server.model.Game : game
  server.controller.Controller o-- server.controller.Player : requestRecipient
  server.controller.Lobby o-- server.controller.Controller : controller
  server.controller.Lobby o-- server.database.DatabaseHandler : databaseHandler
  server.controller.LoginController .up.|> common.remote_interfaces.RemoteLoginController
  server.controller.LoginController -up-|> java.rmi.server.UnicastRemoteObject
  server.controller.LoginController o-- server.database.DatabaseHandler : databaseHandler
  server.controller.LoginController o-- server.controller.Lobby : newLobby
  server.controller.Player .up.|> common.remote_interfaces.RemotePlayer
  server.controller.Player -up-|> java.rmi.server.UnicastRemoteObject
  server.controller.Player o-- common.events.requests.Request : activeRequest
  server.controller.Player o-- server.controller.states.State : currState
  server.controller.Player o-- server.model.WeaponCard : currWeapon
  server.controller.Player o-- server.model.Pc : pc
  server.controller.Player o-- common.remote_interfaces.RemoteView : view
  server.controller.socket.ServerSocketHandler .up.|> java.lang.Runnable
  server.controller.socket.ServerSocketHandler o-- server.controller.LoginController : loginController
  server.controller.socket.ServerSocketHandler o-- common.remote_interfaces.RemotePlayer : player
  server.controller.socket.ServerSocketHandler o-- common.remote_interfaces.RemoteView : view
  server.controller.socket.ViewSocketProxy .up.|> common.events.ModelEventListener
  server.controller.socket.ViewSocketProxy .up.|> common.remote_interfaces.RemoteView
  server.controller.socket.ViewSocketProxy -up-|> common.AbstractSocketProxy
  server.controller.states.EndTurnState -up-|> server.controller.states.State
  server.controller.states.FirstTurnState -up-|> server.controller.states.State
  server.controller.states.FirstTurnState o-- server.model.Pc : pcToSpawn
  server.controller.states.GrabStuffState -up-|> server.controller.states.State
  server.controller.states.GrabStuffState o-- server.model.squares.Square : targetSquare
  server.controller.states.InactiveState -up-|> server.controller.states.State
  server.controller.states.InactiveState o-- server.model.Pc : damagedPc
  server.controller.states.PcSelectionState -up-|> server.controller.states.State
  server.controller.states.ReloadState -up-|> server.controller.states.State
  server.controller.states.ReloadState o-- server.model.WeaponCard : weaponToReload
  server.controller.states.RespawnState -up-|> server.controller.states.State
  server.controller.states.RespawnState o-- server.controller.Player : deadPlayer
  server.controller.states.RunAroundState -up-|> server.controller.states.State
  server.controller.states.RunAroundState o-- server.model.squares.Square : targetSquare
  server.controller.states.SetupKillShotTrackState -up-|> server.controller.states.State
  server.controller.states.SetupMapState -up-|> server.controller.states.State
  server.controller.states.SetupWeaponState -up-|> server.controller.states.State
  server.controller.states.ShootPeopleState -up-|> server.controller.states.State
  server.controller.states.ShootPeopleState o-- server.model.squares.Square : targetSquare
  server.controller.states.StartTurnState -up-|> server.controller.states.State
  server.controller.states.StartTurnState o-- server.controller.states.State : nextState
  server.controller.states.State o-- server.controller.Controller : controller
  server.controller.states.TargetSelectionState -up-|> server.controller.states.State
  server.controller.states.TargetSelectionState o-- server.model.actions.Action : currAction
  server.controller.states.TargetSelectionState o-- server.model.Effect : currEffect
  server.controller.states.TargetSelectionState o-- server.model.squares.Square : squareToMemorize
  server.controller.states.UsePowerUpState -up-|> server.controller.states.State
  server.controller.states.UsePowerUpState o-- server.model.actions.Action : currAction
  server.controller.states.UsePowerUpState o-- server.model.PowerUpCard : currPowerUp
  server.controller.states.UseTargetingScopeState -up-|> server.controller.states.State
  server.controller.states.UseTargetingScopeState o-- common.enums.AmmoEnum : ammoToUse
  server.controller.states.UseTargetingScopeState o-- server.model.actions.Action : currAction
  server.controller.states.UseTargetingScopeState o-- server.model.PowerUpCard : currPowerUp
  server.controller.states.UseTargetingScopeState o-- server.model.PowerUpCard : powerUpSelectedAsAmmo
  server.database.GameInfo o-- server.model.Game : game
  server.database.PlayerInfo o-- common.enums.PcColourEnum : pcColour
  server.database.PlayerInfo o-- server.controller.Player : player
  server.model.Game o-- server.model.ModelEventHandler : events
  server.model.Game o-- server.model.GameBoard : gameBoard
  server.model.GameBoard o-- server.model.KillShotTrack : killShotTrack
  server.model.KillShot o-- common.enums.PcColourEnum : colour
  server.model.Pc o-- common.enums.PcColourEnum : colour
  server.model.Pc o-- server.model.Game : currGame
  server.model.Pc o-- server.model.squares.Square : currSquare
  server.model.Pc o-- server.model.ModelEventHandler : events
  server.model.Pc o-- server.model.PcBoard : pcBoard
  server.model.PcBoard o-- common.enums.PcColourEnum : colour
  server.model.PowerUpCard o-- server.model.actions.Action : action
  server.model.PowerUpCard o-- common.enums.AmmoEnum : colour
  server.model.WeaponCard o-- common.enums.AmmoEnum : colour
  server.model.actions.Action o-- server.model.target_checkers.TargetChecker : targetChecker
  server.model.actions.Action o-- server.model.squares.Square : targetSquare
  server.model.actions.DamageMarksAction -up-|> server.model.actions.Action
  server.model.actions.DamageMarksAction o-- server.model.target_checkers.TargetChecker : orientedTargetChecker
  server.model.actions.MovementAction -up-|> server.model.actions.Action
  server.model.actions.MovementAction o-- server.model.target_checkers.TargetChecker : destinationChecker
  server.model.deserializers.ActionDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.deserializers.AmmoDeckDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.deserializers.GameBoardDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.deserializers.PowerUpsDeckDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.deserializers.SquareDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.deserializers.WeaponsDeckDeserializer .up.|> com.google.gson.JsonDeserializer
  server.model.serializers.ActionSerializer .up.|> com.google.gson.JsonSerializer
  server.model.serializers.DeckSerializer .up.|> com.google.gson.JsonSerializer
  server.model.serializers.TargetCheckerSerializer .up.|> com.google.gson.JsonSerializer
  server.model.squares.AmmoSquare -up-|> server.model.squares.Square
  server.model.squares.AmmoSquare o-- server.model.AmmoTile : ammoTile
  server.model.squares.SpawnPoint -up-|> server.model.squares.Square
  server.model.squares.Square o-- server.model.ModelEventHandler : events
  server.model.squares.Square o-- common.enums.SquareColourEnum : colour
  server.model.target_checkers.BeyondWallsStraightLineDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.BeyondWallsStraightLineDecorator o-- common.enums.CardinalDirectionEnum : direction
  server.model.target_checkers.BlindnessDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.DifferentRoomDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.EmptyChecker .up.|> server.model.target_checkers.TargetChecker
  server.model.target_checkers.MaxDistanceDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.MaxDistanceFromVIsiblesDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.MinDistanceDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.SameRoomDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.SimpleStraightLineDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator
  server.model.target_checkers.SimpleStraightLineDecorator o-- common.enums.CardinalDirectionEnum : direction
  server.model.target_checkers.TargetCheckerDecorator .up.|> server.model.target_checkers.TargetChecker
  server.model.target_checkers.TargetCheckerDecorator o-- server.model.target_checkers.TargetChecker : base
  server.model.target_checkers.VisibilityDecorator -up-|> server.model.target_checkers.TargetCheckerDecorator


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
