@startuml

title __ACTIONS's Class Diagram__\n

  namespace server {
    namespace model {
      namespace actions {
        abstract class server.model.actions.Action {
            ~ maxNumberOfTargets : int
            ~ targets : Set<Pc>
            - isMovement : boolean
            - necessaryForNextAction : boolean
            - needsOldSquare : boolean
            - optional : boolean
            - parameterized : boolean
            + Action()
            + Action()
            {abstract} + apply()
            + isAdditionalDamage()
            {abstract} + isComplete()
            + isExclusiveForOldTargets()
            + isExplosive()
            + isMovement()
            + isNecessaryForNextAction()
            + isOptional()
            + isParameterized()
            + isRoomExplosive()
            {abstract} + isSelfMovement()
            + isSquareExplosive()
            + needsOldSquare()
            {abstract} + resetAction()
            {abstract} + selectPc()
            {abstract} + selectSquare()
            + setOrientedTargetChecker()
            + setTargetSquare()
            {abstract} + validSquares()
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace actions {
        class server.model.actions.DamageMarksAction {
            - additionalDamage : boolean
            - damage : short
            - exclusiveForOldTargets : boolean
            - marks : short
            - roomExplosive : boolean
            - squareExplosive : boolean
            - targetsOnDifferentSquares : boolean
            + DamageMarksAction()
            + DamageMarksAction()
            + apply()
            + isAdditionalDamage()
            + isComplete()
            + isExclusiveForOldTargets()
            + isExplosive()
            + isRoomExplosive()
            + isSelfMovement()
            + isSquareExplosive()
            + resetAction()
            + selectPc()
            + selectSquare()
            + setOrientedTargetChecker()
            + validSquares()
        }
      }
    }
  }
  

  namespace server {
    namespace model {
      namespace actions {
        class server.model.actions.MovementAction {
            - linkedChecker : boolean
            - selfMovement : boolean
            + MovementAction()
            + MovementAction()
            + apply()
            + isComplete()
            + isSelfMovement()
            + resetAction()
            + selectPc()
            + selectSquare()
            + validSquares()
        }
      }
    }
  }
  

  server.model.actions.Action o-- server.model.target_checkers.TargetChecker : targetChecker
  server.model.actions.Action o-- server.model.squares.Square : targetSquare
  server.model.actions.DamageMarksAction -up-|> server.model.actions.Action
  server.model.actions.DamageMarksAction o-- server.model.target_checkers.TargetChecker : orientedTargetChecker
  server.model.actions.MovementAction -up-|> server.model.actions.Action
  server.model.actions.MovementAction o-- server.model.target_checkers.TargetChecker : destinationChecker


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
