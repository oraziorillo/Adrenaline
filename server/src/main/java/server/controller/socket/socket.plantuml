@startuml

title __SOCKET's Class Diagram__\n

  namespace server {
    namespace controller {
      namespace socket {
        class server.controller.socket.ServerSocketHandler {
            - in : Scanner
            - out : PrintWriter
            - socket : Socket
            + ServerSocketHandler()
            + run()
            - handle()
        }
      }
    }
  }
  

  namespace server {
    namespace controller {
      namespace socket {
        class server.controller.socket.ViewSocketProxy {
            - gson : Gson
            + ack()
            + chatMessage()
            + close()
            + getListener()
            + isReachable()
            + notifyEvent()
            + onGameBoardUpdate()
            + onKillShotTrackUpdate()
            + onPcBoardUpdate()
            + onPcUpdate()
            + onSquareUpdate()
            + request()
            + resumeGame()
            + winners()
            ~ ViewSocketProxy()
        }
      }
    }
  }
  

  server.controller.socket.ServerSocketHandler .up.|> java.lang.Runnable
  server.controller.socket.ServerSocketHandler o-- server.controller.LoginController : loginController
  server.controller.socket.ServerSocketHandler o-- common.remote_interfaces.RemotePlayer : player
  server.controller.socket.ServerSocketHandler o-- common.remote_interfaces.RemoteView : view
  server.controller.socket.ViewSocketProxy .up.|> common.events.ModelEventListener
  server.controller.socket.ViewSocketProxy .up.|> common.remote_interfaces.RemoteView
  server.controller.socket.ViewSocketProxy -up-|> common.AbstractSocketProxy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
