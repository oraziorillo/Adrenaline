@startuml

title __CLIENT's Class Diagram__\n

  namespace client {
    class client.ClientPropertyLoader {
    }
  }
  

  namespace client {
    namespace controller.socket {
      class client.controller.socket.ClientSocketHandler {
      }
    }
  }
  

  namespace client {
    namespace controller.socket {
      class client.controller.socket.LoginControllerSocketProxy {
      }
    }
  }
  

  namespace client {
    namespace controller.socket {
      class client.controller.socket.PlayerSocketProxy {
      }
    }
  }
  

  namespace client {
    namespace view {
      abstract class client.view.AbstractView {
      }
    }
  }
  

  namespace client {
    namespace view {
      interface client.view.InputReader {
      }
    }
  }
  

  client.ClientPropertyLoader -up-|> common.PropertyLoader
  client.controller.socket.ClientSocketHandler .up.|> java.lang.Runnable
  client.controller.socket.ClientSocketHandler o-- client.view.AbstractView : view
  client.controller.socket.LoginControllerSocketProxy .up.|> common.remote_interfaces.RemoteLoginController
  client.controller.socket.LoginControllerSocketProxy -up-|> common.AbstractSocketProxy
  client.controller.socket.LoginControllerSocketProxy o-- client.view.AbstractView : view
  client.controller.socket.PlayerSocketProxy .up.|> common.remote_interfaces.RemotePlayer
  client.controller.socket.PlayerSocketProxy -up-|> common.AbstractSocketProxy
  client.view.AbstractView .up.|> common.events.ModelEventListener
  client.view.AbstractView .up.|> common.remote_interfaces.RemoteView
  client.view.AbstractView -up-|> java.rmi.server.UnicastRemoteObject


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
