@startuml

title __SOCKET's Class Diagram__\n

  namespace client {
    namespace controller.socket {
      class client.controller.socket.ClientSocketHandler {
          - buffer : BlockingQueue<String[]>
          - gson : Gson
          - in : BufferedReader
          - out : PrintWriter
          - socket : Socket
          + run()
          ~ ClientSocketHandler()
          - handle()
      }
    }
  }
  

  namespace client {
    namespace controller.socket {
      class client.controller.socket.LoginControllerSocketProxy {
          - buffer : BlockingQueue<String[]>
          + LoginControllerSocketProxy()
          + joinLobby()
          + login()
          + register()
      }
    }
  }
  

  namespace client {
    namespace controller.socket {
      class client.controller.socket.PlayerSocketProxy {
          - token : UUID
          + chooseAmmo()
          + chooseAsynchronousEffectOrder()
          + chooseDirection()
          + chooseMap()
          + chooseNumberOfSkulls()
          + choosePcColour()
          + choosePowerUp()
          + chooseSquare()
          + chooseTarget()
          + chooseUpgrade()
          + chooseWeaponOfMine()
          + chooseWeaponOnSpawnPoint()
          + getToken()
          + grabStuff()
          + isConnected()
          + ok()
          + pass()
          + quit()
          + reload()
          + response()
          + runAround()
          + sendMessage()
          + shootPeople()
          + skip()
          + switchFireMode()
          + undo()
          + usePowerUp()
          ~ PlayerSocketProxy()
      }
    }
  }
  

  client.controller.socket.ClientSocketHandler .up.|> java.lang.Runnable
  client.controller.socket.ClientSocketHandler o-- client.view.AbstractView : view
  client.controller.socket.LoginControllerSocketProxy .up.|> common.remote_interfaces.RemoteLoginController
  client.controller.socket.LoginControllerSocketProxy -up-|> common.AbstractSocketProxy
  client.controller.socket.LoginControllerSocketProxy o-- client.view.AbstractView : view
  client.controller.socket.PlayerSocketProxy .up.|> common.remote_interfaces.RemotePlayer
  client.controller.socket.PlayerSocketProxy -up-|> common.AbstractSocketProxy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
