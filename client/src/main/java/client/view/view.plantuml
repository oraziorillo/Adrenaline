@startuml

title __VIEW's Class Diagram__\n

  namespace client {
    namespace view {
      abstract class client.view.AbstractView {
          {static} # HOST : String
          {static} # RMI_PORT : int
          {static} # SOCKET_PORT : int
          + acquireConnection()
          + acquireConnectionMethod()
          + acquireToken()
          + acquireUsername()
          + authMethod()
          + error()
          + nextCommand()
          + printMessage()
          # AbstractView()
      }
    }
  }
  

  namespace client {
    namespace view {
      interface client.view.InputReader {
          {abstract} + requestCommand()
          {abstract} + requestInt()
          {abstract} + requestString()
      }
    }
  }
  

  client.view.AbstractView .up.|> common.events.ModelEventListener
  client.view.AbstractView .up.|> common.remote_interfaces.RemoteView
  client.view.AbstractView -up-|> java.rmi.server.UnicastRemoteObject


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
