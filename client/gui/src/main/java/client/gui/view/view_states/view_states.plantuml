@startuml

title __VIEW_STATES's Class Diagram__\n

  namespace client.gui {
    namespace view {
      namespace view_states {
        class client.gui.view.view_states.InGameState {
            + nextState()
            + resumeGame()
            ~ InGameState()
        }
      }
    }
  }
  

  namespace client.gui {
    namespace view {
      namespace view_states {
        class client.gui.view.view_states.SetupState {
            - beforeMyTurn : DoubleProperty
            - gameBoardToPass : HashSet<GameBoardEvent>
            - killShotToPass : HashSet<KillShotTrackEvent>
            - pcToPass : HashSet<PcEvent>
            - stillChoosing : DoubleProperty
            + ack()
            + nextState()
            + notifyEvent()
            + onGameBoardUpdate()
            + onKillShotTrackUpdate()
            + onPcBoardUpdate()
            + onPcUpdate()
            + onSquareUpdate()
            + resumeGame()
            ~ SetupState()
        }
      }
    }
  }
  

  namespace client.gui {
    namespace view {
      namespace view_states {
        class client.gui.view.view_states.UserAuthState {
            + acquireConnection()
            + acquireConnectionMethod()
            + acquireToken()
            + acquireUsername()
            + authMethod()
            + nextState()
            + resumeGame()
            ~ UserAuthState()
        }
      }
    }
  }
  

  namespace client.gui {
    namespace view {
      namespace view_states {
        abstract class client.gui.view.view_states.ViewState {
            {static} # player : RemotePlayer
            {static} ~ hostServices : HostServices
            {static} ~ stage : Stage
            {static} ~ topView : GuiView
            {static} - UNEXPECTED_CALL : String
            {static} - javafxController : AbstractJavaFxController
            {static} - previousAcks : List<String>
            + ack()
            + acquireConnection()
            + acquireConnectionMethod()
            + acquireToken()
            + acquireUsername()
            + authMethod()
            + chatMessage()
            + error()
            {static} + getFirstState()
            {abstract} + nextState()
            + notifyEvent()
            + onGameBoardUpdate()
            + onKillShotTrackUpdate()
            + onPcBoardUpdate()
            + onPcUpdate()
            + onSquareUpdate()
            + request()
            {abstract} + resumeGame()
            + setPlayer()
            {static} + setTopView()
            + winners()
            # getJavafxController()
            # setJavafxController()
            ~ ViewState()
        }
      }
    }
  }
  

  client.gui.view.view_states.InGameState -up-|> client.gui.view.view_states.ViewState
  client.gui.view.view_states.SetupState -up-|> client.gui.view.view_states.ViewState
  client.gui.view.view_states.UserAuthState -up-|> client.gui.view.view_states.ViewState


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
